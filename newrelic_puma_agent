#! /usr/bin/env ruby

require "rubygems"
require "bundler/setup"

require "newrelic_plugin"
require 'yaml'
require 'json'
require 'faraday'

module PumaAgent
  class Agent < NewRelic::Plugin::Agent::Base
    agent_guid "com.ubxd.newrelic_puma"
    agent_version "0.0.2"
    agent_config_options :control_urls, :token, :application
    agent_human_labels("Puma Agent") { application }

    def poll_cycle
      backlog = 0
      running = 0

      control_urls.each do |control_url|
        conn = Faraday.new(:url => control_url)
        response = conn.get '/stats', { :token => token }
        result = JSON.parse(response.body)

        worker_status = result['worker_status']
        backlog += worker_status.map { |worker| worker['last_status']['backlog'] }.inject(0){|sum,x| sum + x }
        running += worker_status.map { |worker| worker['last_status']['running'] }.inject(0){|sum,x| sum + x }
      end

      report_metric "backlog", "threads", backlog
      report_metric "running", "threads", running
    end
  end

  #
  # Register this agent with the component.
  # The ExampleAgent is the name of the module that defines this
  # driver (the module must contain at least three classes - a
  # PollCycle, a Metric and an Agent class, as defined above).
  #
  NewRelic::Plugin::Setup.install_agent :puma, PumaAgent

  #
  # Launch the agent; this never returns.
  #
  NewRelic::Plugin::Run.setup_and_run
end
